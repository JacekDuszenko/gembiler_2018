
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN COLON DECLARE DIV DO DOWNTO ELSE END ENDDO ENDFOR ENDIF ENDWHILE EQ FOR FROM GEQ GT ID IF IN LBR LEQ LT MINUS MOD MULT NEQ NUM PLUS RBR READ SEMICOLON THEN TO WHILE WRITEprogram : DECLARE declarations IN commands ENDdeclarations\t: declarations ID SEMICOLON declarations\t: declarations ID LBR NUM COLON NUM RBR SEMICOLON declarations\t: commands\t: commands command commands\t: commandcommand\t: identifier ASSIGN expression SEMICOLON command\t: IF condition THEN commands ENDIFcommand\t: IF condition THEN commands ELSE commands ENDIFcommand\t: WHILE condition DO commands ENDWHILEcommand\t: DO commands WHILE condition ENDDO iterator\t: ID command\t: FOR iterator FROM value TO value DO commands ENDFOR command\t: FOR iterator FROM value DOWNTO value DO commands ENDFOR command\t: READ identifier SEMICOLON command\t: WRITE value SEMICOLON expression : valueexpression : value PLUS valueexpression : value MINUS valueexpression : value MULT valueexpression : value DIV valueexpression : value MOD valuecondition\t: value EQ valuecondition\t: value NEQ valuecondition\t: value LT valuecondition\t: value GT valuecondition\t: value LEQ valuecondition\t: value GEQ value value : NUM value : identifier identifier\t: ID identifier\t: ID LBR ID RBR identifier\t: ID LBR NUM RBR '
    
_lr_action_items = {'EQ':([9,22,23,25,58,59,],[-31,-30,34,-29,-32,-33,]),'ELSE':([12,21,43,46,57,65,72,78,79,87,90,91,],[-6,-5,-16,-15,71,-7,-8,-10,-11,-9,-14,-13,]),'GEQ':([9,22,23,25,58,59,],[-31,-30,38,-29,-32,-33,]),'TO':([9,22,25,50,58,59,],[-31,-30,-29,70,-32,-33,]),'PLUS':([9,22,25,44,58,59,],[-31,-30,-29,61,-32,-33,]),'LBR':([5,9,],[16,26,]),'DOWNTO':([9,22,25,50,58,59,],[-31,-30,-29,69,-32,-33,]),'SEMICOLON':([5,9,22,25,27,29,44,45,58,59,73,74,75,76,77,80,],[17,-31,-30,-29,43,46,-17,65,-32,-33,-19,-18,-20,-22,-21,84,]),'LEQ':([9,22,23,25,58,59,],[-31,-30,37,-29,-32,-33,]),'FROM':([18,19,],[33,-12,]),'ENDFOR':([12,21,43,46,65,72,78,79,87,88,89,90,91,],[-6,-5,-16,-15,-7,-8,-10,-11,-9,90,91,-14,-13,]),'FOR':([4,7,12,15,21,31,40,43,46,47,57,65,66,71,72,78,79,83,85,86,87,88,89,90,91,],[6,6,-6,6,-5,6,6,-16,-15,6,6,-7,6,6,-8,-10,-11,6,6,6,-9,6,6,-14,-13,]),'GT':([9,22,23,25,58,59,],[-31,-30,35,-29,-32,-33,]),'MINUS':([9,22,25,44,58,59,],[-31,-30,-29,60,-32,-33,]),'RBR':([41,42,68,],[58,59,80,]),'NEQ':([9,22,23,25,58,59,],[-31,-30,36,-29,-32,-33,]),'MOD':([9,22,25,44,58,59,],[-31,-30,-29,63,-32,-33,]),'ENDWHILE':([12,21,43,46,65,66,72,78,79,87,90,91,],[-6,-5,-16,-15,-7,78,-8,-10,-11,-9,-14,-13,]),'THEN':([9,22,24,25,51,52,53,54,55,56,58,59,],[-31,-30,40,-29,-23,-26,-24,-27,-28,-25,-32,-33,]),'ENDDO':([9,22,25,51,52,53,54,55,56,58,59,67,],[-31,-30,-29,-23,-26,-24,-27,-28,-25,-32,-33,79,]),'COLON':([32,],[49,]),'LT':([9,22,23,25,58,59,],[-31,-30,39,-29,-32,-33,]),'ENDIF':([12,21,43,46,57,65,72,78,79,83,87,90,91,],[-6,-5,-16,-15,72,-7,-8,-10,-11,87,-9,-14,-13,]),'IF':([4,7,12,15,21,31,40,43,46,47,57,65,66,71,72,78,79,83,85,86,87,88,89,90,91,],[8,8,-6,8,-5,8,8,-16,-15,8,8,-7,8,8,-8,-10,-11,8,8,8,-9,8,8,-14,-13,]),'WRITE':([4,7,12,15,21,31,40,43,46,47,57,65,66,71,72,78,79,83,85,86,87,88,89,90,91,],[10,10,-6,10,-5,10,10,-16,-15,10,10,-7,10,10,-8,-10,-11,10,10,10,-9,10,10,-14,-13,]),'MULT':([9,22,25,44,58,59,],[-31,-30,-29,62,-32,-33,]),'END':([7,12,21,43,46,65,72,78,79,87,90,91,],[20,-6,-5,-16,-15,-7,-8,-10,-11,-9,-14,-13,]),'IN':([1,3,17,84,],[-4,4,-2,-3,]),'ASSIGN':([9,11,58,59,],[-31,28,-32,-33,]),'ID':([1,3,4,6,7,8,10,12,13,14,15,17,21,26,28,31,33,34,35,36,37,38,39,40,43,46,47,48,57,60,61,62,63,64,65,66,69,70,71,72,78,79,83,84,85,86,87,88,89,90,91,],[-4,5,9,19,9,9,9,-6,9,9,9,-2,-5,41,9,9,9,9,9,9,9,9,9,9,-16,-15,9,9,9,9,9,9,9,9,-7,9,9,9,9,-8,-10,-11,9,-3,9,9,-9,9,9,-14,-13,]),'$end':([2,20,],[0,-1,]),'READ':([4,7,12,15,21,31,40,43,46,47,57,65,66,71,72,78,79,83,85,86,87,88,89,90,91,],[13,13,-6,13,-5,13,13,-16,-15,13,13,-7,13,13,-8,-10,-11,13,13,13,-9,13,13,-14,-13,]),'WHILE':([4,7,12,15,21,31,40,43,46,47,57,65,66,71,72,78,79,83,85,86,87,88,89,90,91,],[14,14,-6,14,-5,48,14,-16,-15,14,14,-7,14,14,-8,-10,-11,14,14,14,-9,14,14,-14,-13,]),'DECLARE':([0,],[1,]),'DO':([4,7,9,12,15,21,22,25,30,31,40,43,46,47,51,52,53,54,55,56,57,58,59,65,66,67,71,72,78,79,81,82,83,85,86,87,88,89,90,91,],[15,15,-31,-6,15,-5,-30,-29,47,15,15,-16,-15,15,-23,-26,-24,-27,-28,-25,15,-32,-33,-7,15,47,15,-8,-10,-11,85,86,15,15,15,-9,15,15,-14,-13,]),'NUM':([8,10,14,16,26,28,33,34,35,36,37,38,39,48,49,60,61,62,63,64,69,70,],[25,25,25,32,42,25,25,25,25,25,25,25,25,25,68,25,25,25,25,25,25,25,]),'DIV':([9,22,25,44,58,59,],[-31,-30,-29,64,-32,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'iterator':([6,],[18,]),'value':([8,10,14,28,33,34,35,36,37,38,39,48,60,61,62,63,64,69,70,],[23,27,23,44,50,51,52,53,54,55,56,23,73,74,75,76,77,81,82,]),'declarations':([1,],[3,]),'expression':([28,],[45,]),'identifier':([4,7,8,10,13,14,15,28,31,33,34,35,36,37,38,39,40,47,48,57,60,61,62,63,64,66,69,70,71,83,85,86,88,89,],[11,11,22,22,29,22,11,22,11,22,22,22,22,22,22,22,11,11,22,11,22,22,22,22,22,11,22,22,11,11,11,11,11,11,]),'commands':([4,15,40,47,71,85,86,],[7,31,57,66,83,88,89,]),'condition':([8,14,48,],[24,30,67,]),'program':([0,],[2,]),'command':([4,7,15,31,40,47,57,66,71,83,85,86,88,89,],[12,21,12,21,12,12,21,21,12,21,12,12,21,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> DECLARE declarations IN commands END','program',5,'p_program','kompilator.py',162),
  ('declarations -> declarations ID SEMICOLON','declarations',3,'p_declarations_variable','kompilator.py',168),
  ('declarations -> declarations ID LBR NUM COLON NUM RBR SEMICOLON','declarations',8,'p_declarations_array','kompilator.py',174),
  ('declarations -> <empty>','declarations',0,'p_declarations_empty','kompilator.py',179),
  ('commands -> commands command','commands',2,'p_commands_mult','kompilator.py',184),
  ('commands -> command','commands',1,'p_commands_one','kompilator.py',188),
  ('command -> identifier ASSIGN expression SEMICOLON','command',4,'p_command_assign','kompilator.py',198),
  ('command -> IF condition THEN commands ENDIF','command',5,'p_command_if','kompilator.py',209),
  ('command -> IF condition THEN commands ELSE commands ENDIF','command',7,'p_command_if_else','kompilator.py',217),
  ('command -> WHILE condition DO commands ENDWHILE','command',5,'p_command_while','kompilator.py',233),
  ('command -> DO commands WHILE condition ENDDO','command',5,'p_command_dowhile','kompilator.py',245),
  ('iterator -> ID','iterator',1,'p_iterator','kompilator.py',257),
  ('command -> FOR iterator FROM value TO value DO commands ENDFOR','command',9,'p_command_for_to','kompilator.py',264),
  ('command -> FOR iterator FROM value DOWNTO value DO commands ENDFOR','command',9,'p_command_for_downto','kompilator.py',296),
  ('command -> READ identifier SEMICOLON','command',3,'p_command_input','kompilator.py',330),
  ('command -> WRITE value SEMICOLON','command',3,'p_command_output','kompilator.py',341),
  ('expression -> value','expression',1,'p_expression_value','kompilator.py',353),
  ('expression -> value PLUS value','expression',3,'p_expression_plus','kompilator.py',360),
  ('expression -> value MINUS value','expression',3,'p_expression_minus','kompilator.py',369),
  ('expression -> value MULT value','expression',3,'p_expression_mult','kompilator.py',378),
  ('expression -> value DIV value','expression',3,'p_expression_div','kompilator.py',396),
  ('expression -> value MOD value','expression',3,'p_expression_mod','kompilator.py',430),
  ('condition -> value EQ value','condition',3,'p_condition_eq','kompilator.py',468),
  ('condition -> value NEQ value','condition',3,'p_condition_neq','kompilator.py',490),
  ('condition -> value LT value','condition',3,'p_condition_lt','kompilator.py',511),
  ('condition -> value GT value','condition',3,'p_condition_gt','kompilator.py',526),
  ('condition -> value LEQ value','condition',3,'p_condition_leq','kompilator.py',541),
  ('condition -> value GEQ value','condition',3,'p_condition_geq','kompilator.py',557),
  ('value -> NUM','value',1,'p_value_NUM','kompilator.py',580),
  ('value -> identifier','value',1,'p_value_identifier','kompilator.py',584),
  ('identifier -> ID','identifier',1,'p_identifier_id','kompilator.py',590),
  ('identifier -> ID LBR ID RBR','identifier',4,'p_identifier_tab_id','kompilator.py',594),
  ('identifier -> ID LBR NUM RBR','identifier',4,'p_identifier','kompilator.py',598),
]
